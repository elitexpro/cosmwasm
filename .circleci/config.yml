version: 2
workflows:
  version: 2
  test:
    jobs:
      - package_schema
      - package_std
      - package_storage
      - package_vm_cranelift
      - package_vm_singlepass
      - contract_hackatom
      - contract_hackatom_in_singlepass_vm
      - contract_queue
      - contract_reflect
      - contract_staking
      - fmt
      - clippy

jobs:
  package_schema:
    docker:
      - image: rust:1.41.1
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-package_schema-rust:1.41.1-{{ checksum "Cargo.lock" }}
      - run:
          name: Build
          working_directory: ~/project/packages/schema
          command: cargo build --locked
      - run:
          name: Run tests
          working_directory: ~/project/packages/schema
          command: cargo test --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cargocache-v2-package_schema-rust:1.41.1-{{ checksum "Cargo.lock" }}

  package_std:
    docker:
      - image: rust:1.41.1
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-package_std-rust:1.41.1-{{ checksum "Cargo.lock" }}
      - run:
          name: Add wasm32 target
          command: rustup target add wasm32-unknown-unknown && rustup target list --installed
      - run:
          name: Build library for native target (no features)
          working_directory: ~/project/packages/std
          command: cargo build --locked --no-default-features
      - run:
          name: Build library for wasm target (no features)
          working_directory: ~/project/packages/std
          command: cargo wasm --locked --no-default-features
      - run:
          name: Run unit tests (no features)
          working_directory: ~/project/packages/std
          command: cargo test --locked --no-default-features
      - run:
          name: Build library for native target (all features)
          working_directory: ~/project/packages/std
          command: cargo build --locked --all-features
      - run:
          name: Build library for wasm target (all features)
          working_directory: ~/project/packages/std
          command: cargo wasm --locked --all-features
      - run:
          name: Run unit tests (all features)
          working_directory: ~/project/packages/std
          command: cargo test --locked --all-features
      - run:
          name: Build and run schema generator
          working_directory: ~/project/packages/std
          command: cargo schema --locked
      - run:
          name: Ensure schemas are up-to-date
          command: |
            CHANGES_IN_REPO=$(git status --porcelain)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' and 'git --no-pager diff' for debugging now:"
              git status && git --no-pager diff
              exit 1
            fi
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cargocache-v2-package_std-rust:1.41.1-{{ checksum "Cargo.lock" }}

  package_storage:
    docker:
      - image: rust:1.41.1
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-package_storage-rust:1.41.1-{{ checksum "Cargo.lock" }}
      - run:
          name: Build library for native target
          working_directory: ~/project/packages/storage
          command: cargo build --locked
      - run:
          name: Run unit tests
          working_directory: ~/project/packages/storage
          command: cargo test --locked
      - run:
          name: Run unit tests (with iterator support)
          working_directory: ~/project/packages/storage
          command: cargo test --locked --features iterator
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cargocache-v2-package_storage-rust:1.41.1-{{ checksum "Cargo.lock" }}

  package_vm_cranelift:
    docker:
      - image: rust:1.41.1
    steps:
      - checkout
      - run:
          name: Install CMake (required for compiling wabt-sys, a dev dependency of the VM)
          command: 'apt-get update && apt-get install -y cmake'
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-package_vm_cranelift-rust:1.41.1-{{ checksum "Cargo.lock" }}
      - run:
          name: Build
          working_directory: ~/project/packages/vm
          command: cargo build --locked --no-default-features --features default-cranelift,iterator
      - run:
          name: Test
          working_directory: ~/project/packages/vm
          command: cargo test --locked --no-default-features --features default-cranelift,iterator
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cargocache-v2-package_vm_cranelift-rust:1.41.1-{{ checksum "Cargo.lock" }}

  package_vm_singlepass:
    docker:
      - image: rustlang/rust:nightly
    steps:
      - checkout
      - run:
          name: Install CMake (required for compiling wabt-sys, a dev dependency of the VM)
          command: 'apt-get update && apt-get install -y cmake'
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-package_vm_singlepass-rust:nightly-{{ checksum "Cargo.lock" }}
      - run:
          name: Build
          working_directory: ~/project/packages/vm
          command: cargo build --locked
      - run:
          name: Build with iterator
          working_directory: ~/project/packages/vm
          command: cargo build --locked --features iterator
      - run:
          name: Test
          working_directory: ~/project/packages/vm
          command: cargo test --locked
      - run:
          name: Test with iterator
          working_directory: ~/project/packages/vm
          command: cargo test --locked --features iterator
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cargocache-v2-package_vm_singlepass-rust:nightly-{{ checksum "Cargo.lock" }}

  contract_hackatom:
    docker:
      - image: rust:1.41.1
    working_directory: ~/cosmwasm/contracts/hackatom
    steps:
      - checkout:
          path: ~/cosmwasm
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-v2-contract_hackatom-rust:1.41.1-{{ checksum "Cargo.lock" }}
      - run:
          name: Add wasm32 target
          command: rustup target add wasm32-unknown-unknown && rustup target list --installed
      - run:
          name: Build wasm binary
          command: cargo wasm --locked
      - run:
          name: Unit tests
          env: RUST_BACKTRACE=1
          command: cargo unit-test --locked
      - run:
          name: Integration tests
          command: cargo integration-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - run:
          name: Ensure schemas are up-to-date
          command: |
            CHANGES_IN_REPO=$(git status --porcelain)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' and 'git --no-pager diff' for debugging now:"
              git status && git --no-pager diff
              exit 1
            fi
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
            - target/wasm32-unknown-unknown/release/.fingerprint
            - target/wasm32-unknown-unknown/release/build
            - target/wasm32-unknown-unknown/release/deps
          key: cargocache-v2-contract_hackatom-rust:1.41.1-{{ checksum "Cargo.lock" }}

  # In this job we use singlepass as the VM to execute integration tests. This requires Rust nightly.
  # Avoid duplicating generic checks like unit tests or schema generation â€“ they belong in the generic hackatom job.
  contract_hackatom_in_singlepass_vm:
    docker:
      - image: rustlang/rust:nightly
    working_directory: ~/cosmwasm/contracts/hackatom
    steps:
      - checkout:
          path: ~/cosmwasm
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-v2-contract_hackatom_in_singlepass_vm-rust:nightly-{{ checksum "Cargo.lock" }}
      - run:
          name: Add wasm32 target
          command: rustup target add wasm32-unknown-unknown && rustup target list --installed
      - run:
          name: Build wasm binary
          command: cargo wasm --locked
      - run:
          name: Integration tests
          command: cargo integration-test --no-default-features --features singlepass --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
            - target/wasm32-unknown-unknown/release/.fingerprint
            - target/wasm32-unknown-unknown/release/build
            - target/wasm32-unknown-unknown/release/deps
          key: cargocache-v2-contract_hackatom_in_singlepass_vm-rust:nightly-{{ checksum "Cargo.lock" }}

  contract_queue:
    docker:
      - image: rust:1.41.1
    working_directory: ~/cosmwasm/contracts/queue
    steps:
      - checkout:
          path: ~/cosmwasm
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-v2-contract_queue-rust:1.41.1-{{ checksum "Cargo.lock" }}
      - run:
          name: Add wasm32 target
          command: rustup target add wasm32-unknown-unknown && rustup target list --installed
      - run:
          name: Build wasm binary
          command: cargo wasm --locked
      - run:
          name: Unit tests
          env: RUST_BACKTRACE=1
          command: cargo unit-test --locked
      - run:
          name: Integration tests
          command: cargo integration-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - run:
          name: Ensure schemas are up-to-date
          command: |
            CHANGES_IN_REPO=$(git status --porcelain)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' and 'git --no-pager diff' for debugging now:"
              git status && git --no-pager diff
              exit 1
            fi
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
            - target/wasm32-unknown-unknown/release/.fingerprint
            - target/wasm32-unknown-unknown/release/build
            - target/wasm32-unknown-unknown/release/deps
          key: cargocache-v2-contract_queue-rust:1.41.1-{{ checksum "Cargo.lock" }}

  contract_reflect:
    docker:
      - image: rust:1.41.1
    working_directory: ~/cosmwasm/contracts/reflect
    steps:
      - checkout:
          path: ~/cosmwasm
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-v2-contract_reflect-rust:1.41.1-{{ checksum "Cargo.lock" }}
      - run:
          name: Add wasm32 target
          command: rustup target add wasm32-unknown-unknown && rustup target list --installed
      - run:
          name: Build wasm binary
          command: cargo wasm --locked
      - run:
          name: Unit tests
          env: RUST_BACKTRACE=1
          command: cargo unit-test --locked
      - run:
          name: Integration tests
          command: cargo integration-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - run:
          name: Ensure schemas are up-to-date
          command: |
            CHANGES_IN_REPO=$(git status --porcelain)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' and 'git --no-pager diff' for debugging now:"
              git status && git --no-pager diff
              exit 1
            fi
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
            - target/wasm32-unknown-unknown/release/.fingerprint
            - target/wasm32-unknown-unknown/release/build
            - target/wasm32-unknown-unknown/release/deps
          key: cargocache-v2-contract_reflect-rust:1.41.1-{{ checksum "Cargo.lock" }}

  contract_staking:
    docker:
      - image: rust:1.41.1
    working_directory: ~/cosmwasm/contracts/staking
    steps:
      - checkout:
          path: ~/cosmwasm
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-v2-contract_staking-rust:1.41.1-{{ checksum "Cargo.lock" }}
      - run:
          name: Add wasm32 target
          command: rustup target add wasm32-unknown-unknown && rustup target list --installed
      - run:
          name: Build wasm binary
          command: cargo wasm --locked
      - run:
          name: Unit tests
          env: RUST_BACKTRACE=1
          command: cargo unit-test --locked
      - run:
          name: Integration tests
          command: cargo integration-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - run:
          name: Ensure schemas are up-to-date
          command: |
            CHANGES_IN_REPO=$(git status --porcelain)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' and 'git --no-pager diff' for debugging now:"
              git status && git --no-pager diff
              exit 1
            fi
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
            - target/wasm32-unknown-unknown/release/.fingerprint
            - target/wasm32-unknown-unknown/release/build
            - target/wasm32-unknown-unknown/release/deps
          key: cargocache-v2-contract_staking-rust:1.41.1-{{ checksum "Cargo.lock" }}

  fmt:
    docker:
      - image: rust:1.41.1
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-fmt-rust:1.41.1-{{ checksum "Cargo.lock" }}
      - run:
          name: Add rustfmt component
          command: rustup component add rustfmt
      - run:
          name: Check formatting of workspace
          command: cargo fmt -- --check
      - run:
          name: Check formatting of contract hackatom
          working_directory: ~/project/contracts/hackatom
          command: cargo fmt -- --check
      - run:
          name: Check formatting of contract reflect
          working_directory: ~/project/contracts/reflect
          command: cargo fmt -- --check
      - run:
          name: Check formatting of contract queue
          working_directory: ~/project/contracts/queue
          command: cargo fmt -- --check
      - run:
          name: Check formatting of contract staking
          working_directory: ~/project/contracts/staking
          command: cargo fmt -- --check
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cargocache-v2-fmt-rust:1.41.1-{{ checksum "Cargo.lock" }}

  clippy:
    docker:
      - image: rust:1.41.1
    steps:
      - checkout
      - run:
          name: Install Rust nightly
          command: |
            rustup --version
            rustup toolchain install nightly --allow-downgrade --profile minimal --component clippy
            rustup target list --installed
      - run:
          name: Version information (default; stable)
          command: rustc --version && cargo --version
      - run:
          name: Version information (nightly)
          command: rustc +nightly --version && cargo +nightly --version
      - restore_cache:
          keys:
            - cargocache-v2-clippy-rust:1.41.1-{{ checksum "Cargo.lock" }}
      - run:
          name: Add clippy component
          command: rustup component add clippy
      #
      # Workspace packages
      #
      - run:
          name: Clippy linting on schema
          working_directory: ~/project/packages/schema
          command: cargo clippy -- -D warnings
      - run:
          name: Clippy linting on std
          working_directory: ~/project/packages/std
          command: cargo clippy --features iterator -- -D warnings
      - run:
          name: Clippy linting on storage
          working_directory: ~/project/packages/storage
          command: cargo clippy --features iterator -- -D warnings
      - run:
          name: Clippy linting on vm (no feature flags)
          working_directory: ~/project/packages/vm
          command: cargo +nightly clippy -- -D warnings
      - run:
          name: Clippy linting on vm (all feature flags)
          working_directory: ~/project/packages/vm
          command: cargo +nightly clippy --features iterator -- -D warnings
      #
      # Contracts
      #
      - run:
          name: Clippy linting on hackatom
          working_directory: ~/project/contracts/hackatom
          command: cargo clippy -- -D warnings
      - run:
          name: Clippy linting on reflect
          working_directory: ~/project/contracts/reflect
          command: cargo clippy -- -D warnings
      - run:
          name: Clippy linting on queue
          working_directory: ~/project/contracts/queue
          command: cargo clippy -- -D warnings
      - run:
          name: Clippy linting on staking
          working_directory: ~/project/contracts/staking
          command: cargo clippy -- -D warnings
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cargocache-v2-clippy-rust:1.41.1-{{ checksum "Cargo.lock" }}
