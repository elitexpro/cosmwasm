version: 2
workflows:
  version: 2
  test:
    jobs:
      - base
      - singlepass_vm
      - cranelift_vm
      - hackatom

jobs:
  base:
    docker:
      - image: rust:1.37
    steps:
      - checkout
      - run:
          name: Install CMAKE
          command: 'apt-get update && apt-get install -y cmake'
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - v4-cargo-cache-base-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build all targets (including workspaces)
          command: cargo build --locked
      - run:
          name: Run all tests (including workspaces)
          command: cargo test --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v4-cargo-cache-base-{{ arch }}-{{ checksum "Cargo.lock" }}

  singlepass_vm:
    docker:
      - image: rustlang/rust:nightly
    steps:
      - checkout
      - run:
          name: Install CMAKE
          command: 'apt-get update && apt-get install -y cmake'
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - v4-cargo-cache-singlepass-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build all targets (including workspaces)
          working_directory: ~/project/lib/vm
          command: cargo build --locked
      - run:
          name: Run all tests (including workspaces)
          working_directory: ~/project/lib/vm
          command: cargo test --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v4-cargo-cache-singlepass-{{ arch }}-{{ checksum "Cargo.lock" }}

  cranelift_vm:
    docker:
      - image: rust:1.37
    steps:
      - checkout
      - run:
          name: Install CMAKE
          command: 'apt-get update && apt-get install -y cmake'
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - v4-cargo-cache-cranelift-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build all targets (including workspaces)
          working_directory: ~/project/lib/vm
          command: cargo build --locked --no-default-features --features cranelift,default-cranelift
      - run:
          name: Run all tests (including workspaces)
          working_directory: ~/project/lib/vm
          command: cargo test --locked --no-default-features --features cranelift,default-cranelift
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v4-cargo-cache-cranelift-{{ arch }}-{{ checksum "Cargo.lock" }}

  hackatom:
    docker:
      # this will use singlepass by default, so we will need nightly
      - image: rustlang/rust:nightly
    working_directory: ~/cosmwasm/contracts/hackatom
    steps:
      - checkout:
          path: ~/cosmwasm
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - v4-cargo-cache-hackatom-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Add wasm32 target
          command: rustup target add wasm32-unknown-unknown
      - run:
          name: Show targets
          command: rustup target list --installed
      - run:
          name: Build wasm binary
          command: cargo wasm --locked
      - run:
          name: Run all tests (rust unit tests, vm integration tests)
          command: cargo test --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
            - target/wasm32-unknown-unknown/release/.fingerprint
            - target/wasm32-unknown-unknown/release/build
            - target/wasm32-unknown-unknown/release/deps
          key: v4-cargo-cache-hackatom-{{ arch }}-{{ checksum "Cargo.lock" }}
